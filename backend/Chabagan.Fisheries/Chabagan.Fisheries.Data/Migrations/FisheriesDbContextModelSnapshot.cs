// <auto-generated />
using System;
using Chabagan.Chabagan.Fisheries.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chabagan.Fisheries.Data.Migrations
{
    [DbContext(typeof(FisheriesDbContext))]
    partial class FisheriesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chabagan.Chabagan.Fisheries.Models.User.DbUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ForgetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2024, 1, 10, 17, 36, 6, 487, DateTimeKind.Local).AddTicks(6302),
                            Email = "admin@gmail.com",
                            IsDeleted = false,
                            IsLock = false,
                            Name = "Admin User",
                            Password = "ba6cOWwqorFar7RJ+fUkjeiRwSkxF+cjUPLzBMfM4RE=",
                            PasswordSalt = "iJvuuVrJ473OYtDt6F6Tvg==",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2024, 1, 10, 17, 36, 6, 502, DateTimeKind.Local).AddTicks(7577),
                            Email = "manager@gmail.com",
                            IsDeleted = false,
                            IsLock = false,
                            Name = "Site Manager",
                            Password = "YWHtqRxGIkOsOGPTX80Eoy2Pk1EZmHdYgzT+uObVGS8=",
                            PasswordSalt = "iJvuuVrJ473OYtDt6F6Tvg==",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2024, 1, 10, 17, 36, 6, 516, DateTimeKind.Local).AddTicks(8750),
                            Email = "user@gmail.com",
                            IsDeleted = false,
                            IsLock = false,
                            Name = "Field User",
                            Password = "ba6cOWwqorFar7RJ+fUkjeiRwSkxF+cjUPLzBMfM4RE=",
                            PasswordSalt = "iJvuuVrJ473OYtDt6F6Tvg==",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Chabagan.Fisheries.Entities.Models.User.DbRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "System Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Business Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "General User"
                        });
                });

            modelBuilder.Entity("Chabagan.Chabagan.Fisheries.Models.User.DbUser", b =>
                {
                    b.HasOne("Chabagan.Fisheries.Entities.Models.User.DbRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
